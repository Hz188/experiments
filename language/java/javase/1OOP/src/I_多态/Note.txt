多态的条件 demo1
    继承/实现关系
    有方法重写
    有父类引用指向子类

访问成员的特点 demo2
    变量
        编译看左边，运行看左边
    重写的方法
        编译看左边，运行看右边
    新定义的方法
        编译看左边，父类没有 报错

多态的好处和弊端 demo3
    好处
        提高程序的扩展性
        用父类做参数，传递子类对象，可以实现多态
    弊端
        传递的子类对象无法调用子类的特有功能了

转型 demo4
    向上转型
        从子到父
        父类引用 指向 子类对象 Animal a = new Dog();
    向下转型
        从父到子
        父类引用 转为 子类对象 Dog d = (Dog)a;