1. Lambda 表达式

    1.1 函数式编程思想概述
            |->  λ
        在数学中，函数就是有输入量，有输出量的一套计算方案，即 拿数据做操作
        面向对象思想 强调 必须通过对象的形式来做事情
        函数式思想 则尽量忽略面向对象的复杂语法 强调 做什么，而不是以什么形式去做
        而Lambda表达式 就是函数式思想的体现

    1.2 体验Lambda表达式 Demo1
        三种实现方式

    1.3 Lambda 表达式的标准格式
        匿名内部类重写run()方法代码分析
                    new Thread(new Runnable() {
                        @Override
                        public void run() {
                            System.out.println("Multithreading program has started.");
                        }
                    }).start();
        1、方法参数为空，说明不需要传递参数
        2、返回值为void，说明执行结果没有返回
        3、方法体中的内容，是我们具体要做的事情

        Lambda表达式代码分析
                     new Thread( () -> {
                                System.out.println("Multithreading program has started.");
                     }).start();
        1、() 里没有内容，可以看作形式参数为空
        2、-> 箭头指向后面要做的事情
        3、{} 包含一段代码，我们称之为代码块，可以看成是方法体中的内容

        组成Lambda的三要素
        形式参数，箭头，代码块

        Lambda表达式格式
            (形式参数) -> {代码块}
                1、形式参数
                    如果有多个参数，逗号隔开，没有参数，留空即可
                2、 ->
                    由英文划线和大于符号组成，固定写法，代表指向动作
                3、{代码块}
                    具体要做的事情，也是以前我们写的方法体内容

    1.4 Lambda 表达式练习
        使用前提
            1、有一个接口
            2、接口中有且仅有一个抽象方法

    1.5 Lambda表达式的省略模式
        1、参数类型可以省略，但是有多个参数情况下，不能只省略一个
        2、如果参数有且仅有一个，那么小括号可以省略
        3、如果代码块的语句只有一条，可以省略大括号和分号，甚至是return

    1.6 Lambda表达式的注意事项
        1.必须有接口，接口有且仅有一个抽象方法
        2.必须有上下文环境，才能推导出对应的Lambda接口
            局部变量的赋值
                Runnable r = () -> System.out.println("Lambda表达式");
            调用方法参数的传递
                new Thread(() -> System.out.println("Lambda表达式")).start();

    1.7 Lambda表达式和匿名内部类的区别
        1、所需类型不同
            匿名内部类：可以是接口，可以是抽象类，可以是具体类
            Lambda：只能是接口
        2、使用限制不同
            如果接口中有且仅有一个抽象方法，可以使用Lambda表达式，也可以使用匿名内部类
            如果接口中多于一个抽象方法，只能使用匿名内部类，不能使用Lambda表达式
        3、实现原理不同
            匿名内部类：编译之后，产生一个单独了.class字节码文件
            Lambda表达式：编译之后，没有一个单独的.class字节码文件，对应的字节码会在运行的时候动态生成